@page "/"

@using Radzen.Blazor
@using Radzen
@using System.Globalization
@inject DialogService DialogService

<PageTitle>Index</PageTitle>

<RadzenText TextStyle="TextStyle.H2" TagName="TagName.H3" Class="mb-4">Example Components in blazor</RadzenText>
<RadzenLink Icon="link" Path="https://blazor.radzen.com/" Text="UI done with Radzen" />

<div class="col-md-4 p-3">
    <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H3" Class="mb-4">Accordion</RadzenText>
    <RadzenAccordion>
        <Items>
            <RadzenAccordionItem Text="Orders" Icon="account_balance_wallet">
                Details for Orders
            </RadzenAccordionItem>
            <RadzenAccordionItem Text="Employees" Icon="account_box">
                Details for Employees
            </RadzenAccordionItem>
            <RadzenAccordionItem Text="Customers" Icon="accessibility">
                Details for Customers
            </RadzenAccordionItem>
        </Items>
    </RadzenAccordion>
</div>
<RadzenText TextStyle="TextStyle.H6" TagName="TagName.H3" Class="mb-4">Card with Buttons and a dialog</RadzenText>
<div class="col-md-4 p-3">
            <RadzenCard>
                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Confirm Dialog</RadzenText>
                <RadzenButton Text="Confirm dialog" Style="width: 100%;" ButtonStyle="ButtonStyle.Secondary" Click=@(args => DialogService.Confirm("Are you sure?", "MyTitle", new ConfirmOptions() { OkButtonText = "Yes", CancelButtonText = "No" })) />
            </RadzenCard>
</div>

<RadzenText TextStyle="TextStyle.H6" TagName="TagName.H3" Class="mb-4">Area Chart with some data</RadzenText>
    <div class="w-100 mb-4">
        <div class="row">
            <div class="col">
                <RadzenCard Class="w-100 mb-4" Style="display: flex; align-items: center; gap: 0.5rem" >
                    <RadzenCheckBox @bind-Value="@smooth" Name="smooth"></RadzenCheckBox>
                    <RadzenLabel Text="Smooth" For="smooth" Style="margin-right: 1rem;"/>
                    <RadzenCheckBox @bind-Value="@showDataLabels" Name="dataLabels"></RadzenCheckBox>
                    <RadzenLabel Text="Show Data Labels" For="dataLabels" />
                </RadzenCard>
                <RadzenChart>
                    <RadzenAreaSeries Smooth="@smooth" Data="@revenue2019" CategoryProperty="Date" Title="2019" ValueProperty="Revenue" RenderingOrder="1">
                        <RadzenSeriesDataLabels Visible="@showDataLabels" />
                    </RadzenAreaSeries>
                    <RadzenAreaSeries Smooth="@smooth" Data="@revenue2020" CategoryProperty="Date" Title="2020" LineType="LineType.Dashed" ValueProperty="Revenue">
                        <RadzenSeriesDataLabels Visible="@showDataLabels" />
                    </RadzenAreaSeries>
                    <RadzenCategoryAxis Padding="20" Formatter="@FormatAsMonth" />
                    <RadzenValueAxis Formatter="@FormatAsUSD">
                        <RadzenGridLines Visible="true" />
                        <RadzenAxisTitle Text="Revenue in USD" />
                    </RadzenValueAxis>
                </RadzenChart>
            </div>
        </div>
    </div>

<RadzenText TextStyle="TextStyle.H6" TagName="TagName.H3" Class="mb-4">Checkbox</RadzenText>
<div class="col-md-4 p-3">
            <RadzenCard>
                <RadzenCheckBox  Name="CheckBox1" TValue="bool"  />
                <RadzenLabel Text="CheckBox" Component="CheckBox1" Style="margin-left: 8px; vertical-align: middle;" />
            </RadzenCard>
</div>
<RadzenText TextStyle="TextStyle.H6" TagName="TagName.H3" Class="mb-4">Datepicker</RadzenText>
<div class="col-md-4 p-3">
                    <RadzenCard>
                        
                        <RadzenDatePicker @bind-Value=@value DateFormat="d" Class="w-100" />
                    </RadzenCard>
                </div>
<RadzenText TextStyle="TextStyle.H6" TagName="TagName.H3" Class="mb-4">Fileupload</RadzenText>
<div class="col-md-4 p-3">
    <RadzenFileInput TValue="string" />
</div>

@code
{
    bool smooth = true;
    bool showDataLabels = false;
     DateTime? value = DateTime.Now;
    class DataItem
    {
        public string Date { get; set; }
        public double Revenue { get; set; }
    }

    string FormatAsUSD(object value)
    {
        return ((double)value).ToString("C0", CultureInfo.CreateSpecificCulture("en-US"));
    }

    string FormatAsMonth(object value)
    {
        if (value != null)
        {
            return Convert.ToDateTime(value).ToString("MMM");
        }

        return string.Empty;
    }

    DataItem[] revenue2019 = new DataItem[] {
        new DataItem
        {
            Date = ("2019-01-01"),
            Revenue = 234000
        },
        new DataItem
        {
            Date = ("2019-02-01"),
            Revenue = 269000
        },
        new DataItem
        {
            Date = ("2019-03-01"),
            Revenue = 233000
        },
        new DataItem
        {
            Date = ("2019-04-01"),
            Revenue = 244000
        },
        new DataItem
        {
            Date = ("2019-05-01"),
            Revenue = 214000
        },
        new DataItem
        {
            Date = ("2019-06-01"),
            Revenue = 253000
        },
        new DataItem
        {
            Date = ("2019-07-01"),
            Revenue = 274000
        },
        new DataItem
        {
            Date = ("2019-08-01"),
            Revenue = 284000
        },
        new DataItem
        {
            Date = ("2019-09-01"),
            Revenue = 273000
        },
        new DataItem
        {
            Date = ("2019-10-01"),
            Revenue = 282000
        },
        new DataItem
        {
            Date = ("2019-11-01"),
            Revenue = 289000
        },
        new DataItem
        {
            Date = ("2019-12-01"),
            Revenue = 294000
        }
    };

    DataItem[] revenue2020 = new DataItem[] {
        new DataItem
        {
            Date = ("2019-01-01"),
            Revenue = 334000
        },
        new DataItem
        {
            Date = ("2019-02-01"),
            Revenue = 369000
        },
        new DataItem
        {
            Date = ("2019-03-01"),
            Revenue = 333000
        },
        new DataItem
        {
            Date = ("2019-04-01"),
            Revenue = 344000
        },
        new DataItem
        {
            Date = ("2019-05-01"),
            Revenue = 314000
        },
        new DataItem
        {
            Date = ("2019-06-01"),
            Revenue = 353000
        },
        new DataItem
        {
            Date = ("2019-07-01"),
            Revenue = 374000
        },
        new DataItem
        {
            Date = ("2019-08-01"),
            Revenue = 384000
        },
        new DataItem
        {
            Date = ("2019-09-01"),
            Revenue = 373000
        },
        new DataItem
        {
            Date = ("2019-10-01"),
            Revenue = 382000
        },
        new DataItem
        {
            Date = ("2019-11-01"),
            Revenue = 389000
        },
        new DataItem
        {
            Date = ("2019-12-01"),
            Revenue = 394000
        }
    };
}